# =============================================================================
# AUCTION SYSTEM UNIFIED ENVIRONMENT CONFIGURATION - EXAMPLE
# =============================================================================
# Copy this file to .env and configure for your environment
# Single .env file supporting dev/mock/prod modes via APP_MODE

# =============================================================================
# CORE CONFIGURATION
# =============================================================================

# Application Mode - Controls which settings are used
# Options: dev, mock, prod
APP_MODE=mock

# API Server Configuration (used by all modes)
API_HOST=0.0.0.0
API_PORT=8000
DEBUG=true
LOG_LEVEL=debug

# Database SQL Query Logging (set to 'true' to enable verbose SQL output)
SQL_DEBUG=false

# CORS Origins (mode-specific)
# Development & Mock
DEV_CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
MOCK_CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
# Production  
PROD_CORS_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# =============================================================================
# DATABASE CONFIGURATION (dev/prod only)
# =============================================================================

# Development Database (local PostgreSQL via Docker)
DEV_DATABASE_URL=postgresql://postgres:password@localhost:5432/auction

# Production Database 
PROD_DATABASE_URL=postgresql://username:password@prod-db-host:5432/auction_prod

# Mock mode uses no database
MOCK_DATABASE_URL=

# =============================================================================
# RINDEXER CONFIGURATION (dev/prod only)
# =============================================================================

# Development Rindexer
DEV_RINDEXER_DATABASE_URL=postgresql://postgres:password@localhost:5432/auction
DEV_RINDEXER_CONFIG=rindexer-local.yaml

# Production Rindexer  
PROD_RINDEXER_DATABASE_URL=postgresql://username:password@prod-db-host:5432/auction_prod
PROD_RINDEXER_CONFIG=rindexer-multi.yaml

# Mock mode uses no rindexer
MOCK_RINDEXER_DATABASE_URL=
MOCK_RINDEXER_CONFIG=

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================

# Enabled Networks (mode-specific)
DEV_NETWORKS_ENABLED=local
MOCK_NETWORKS_ENABLED=ethereum,polygon,arbitrum,optimism,base,local
PROD_NETWORKS_ENABLED=ethereum,polygon,arbitrum,optimism,base

# =============================================================================
# DEVELOPMENT MODE CONFIGURATION
# =============================================================================

# Local blockchain (Anvil)
DEV_ANVIL_RPC_URL=http://localhost:8545
DEV_CHAIN_ID=31337

# Factory contract on local network
DEV_FACTORY_ADDRESS=0x335796f7A0F72368D1588839e38f163d90C92C80
DEV_START_BLOCK=0

# =============================================================================
# PRODUCTION MODE CONFIGURATION
# =============================================================================

# Global Production Settings
PROD_WEB3_INFURA_PROJECT_ID=your_production_infura_key

# Network-specific RPC URLs (replace with your provider keys)
PROD_ETHEREUM_RPC_URL=https://mainnet.infura.io/v3/your_key
PROD_POLYGON_RPC_URL=https://polygon-mainnet.infura.io/v3/your_key
PROD_ARBITRUM_RPC_URL=https://arbitrum-mainnet.infura.io/v3/your_key
PROD_OPTIMISM_RPC_URL=https://optimism-mainnet.infura.io/v3/your_key
PROD_BASE_RPC_URL=https://base-mainnet.infura.io/v3/your_key

# Network-specific Factory Addresses (replace with actual deployed addresses)
PROD_ETHEREUM_FACTORY_ADDRESS=0x_ETHEREUM_FACTORY_ADDRESS
PROD_POLYGON_FACTORY_ADDRESS=0x_POLYGON_FACTORY_ADDRESS
PROD_ARBITRUM_FACTORY_ADDRESS=0x_ARBITRUM_FACTORY_ADDRESS
PROD_OPTIMISM_FACTORY_ADDRESS=0x_OPTIMISM_FACTORY_ADDRESS
PROD_BASE_FACTORY_ADDRESS=0x_BASE_FACTORY_ADDRESS

# Network-specific Start Blocks (set to deployment block for each network)
PROD_ETHEREUM_START_BLOCK=18000000
PROD_POLYGON_START_BLOCK=45000000
PROD_ARBITRUM_START_BLOCK=100000000
PROD_OPTIMISM_START_BLOCK=100000000
PROD_BASE_START_BLOCK=1000000

# =============================================================================
# MOCK MODE CONFIGURATION  
# =============================================================================

# Mock mode requires minimal configuration - everything is hardcoded
# UI will show realistic test data for all networks
MOCK_API_SERVER=simple_server.py

# =============================================================================
# LEGACY COMPATIBILITY VARIABLES (auto-set based on APP_MODE)
# =============================================================================
# These are set dynamically by run.sh script - leave empty in .env file

DATABASE_URL=
RINDEXER_DATABASE_URL=
NETWORKS_ENABLED=
CORS_ORIGINS=
ANVIL_RPC_URL=
FACTORY_ADDRESS=
START_BLOCK=
WEB3_INFURA_PROJECT_ID=
ETHEREUM_RPC_URL=
POLYGON_RPC_URL=
ARBITRUM_RPC_URL=
OPTIMISM_RPC_URL=
BASE_RPC_URL=
ETHEREUM_FACTORY_ADDRESS=
POLYGON_FACTORY_ADDRESS=
ARBITRUM_FACTORY_ADDRESS=
OPTIMISM_FACTORY_ADDRESS=
BASE_FACTORY_ADDRESS=
ETHEREUM_START_BLOCK=
POLYGON_START_BLOCK=
ARBITRUM_START_BLOCK=
OPTIMISM_START_BLOCK=
BASE_START_BLOCK=

# =============================================================================
# QUICK MODE SWITCHING GUIDE
# =============================================================================
# To switch modes:
#
# 1. Edit APP_MODE above to: dev, mock, or prod
# 2. Run: ./run.sh [mode]
#
# The run.sh script automatically configures the legacy variables
# based on your APP_MODE selection.
#
# Examples:
# APP_MODE=mock  + ./run.sh mock  → UI testing (10 seconds)
# APP_MODE=dev   + ./run.sh dev   → Full development (60 seconds)  
# APP_MODE=prod  + ./run.sh prod  → Production deployment (5 minutes)
# =============================================================================